{"version":3,"sources":["api/getPeople.js","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","a","fetch","then","response","json","map","people","mother","find","obj","name","motherName","father","fatherName","result","PersonRow","person","className","Object","keys","filter","elem","key","index","PeopleTable","Fragment","PeoplePage","useState","setPeople","useEffect","App","to","path","exact","ReactDOM","render","document","getElementById"],"mappings":"6UAAaA,EAAS,uCAAG,4BAAAC,EAAA,sEACFC,MAAM,qEACxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,KAAI,SAACC,GAC9B,OAAO,2BACFA,GADL,IAEEC,OAAQJ,EAASK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAASJ,EAAOK,cACjDC,OAAQT,EAASK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAASJ,EAAOO,sBAPhC,cACjBC,EADiB,yBAWhBA,GAXgB,2CAAH,qDCOTC,G,MAAY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAC1B,OACE,wBAAIC,UAAU,UACXC,OAAOC,KAAKH,GAAQI,QAAO,SAAAC,GAAI,MAAa,SAATA,GACxB,eAATA,GAAkC,eAATA,KACzBhB,KAAI,SAACiB,EAAKC,GACT,MAAa,WAARD,GAA4B,WAARA,IAAqBN,EAAOM,GAI9C,wBAAIA,IAAG,WAAMC,GAAN,OAAcP,EAAON,OAASM,EAAOM,IAH1C,wBAAIA,IAAG,WAAMC,GAAN,OAAcP,EAAON,OAASM,EAAOM,GAAKZ,YCNvDc,G,MAAc,SAAC,GAA4B,IAA1BlB,EAAyB,EAAzBA,OAC5B,OACE,2BAAOW,UAAU,eACf,+BACE,4BACGC,OAAOC,KAAKb,EAAO,IAAIc,QAAO,SAAAC,GAAI,MAAa,SAATA,GAA4B,eAATA,GAAkC,eAATA,KAAuBhB,KAAI,SAACiB,EAAKC,GAAN,OAC5G,wBAAID,IAAKC,GACND,QAKT,+BACGhB,GAAUA,EAAOD,KAAI,SAACW,EAAQO,GAAT,OACpB,kBAAC,IAAME,SAAP,CAAgBH,IAAKC,GACnB,kBAAC,EAAD,CAAWP,OAAQA,YCjBlBU,EAAa,WACxB,MAA4BC,mBAAS,CAAC,KAAtC,mBAAOrB,EAAP,KAAesB,EAAf,KASA,OAPAC,qBAAU,WACR9B,IACGG,MAAK,SAACC,GACLyB,EAAUzB,QAEb,IAGD,oCACE,kBAAC,EAAD,CAAaG,OAAQA,MCeZwB,EAxBH,kBACV,yBAAKb,UAAU,OACb,4BAAQA,UAAU,UAChB,sCACA,kBAAC,IAAD,CAASc,GAAG,IAAId,UAAU,QAA1B,gBACA,kBAAC,IAAD,CAASc,GAAG,UAAUd,UAAU,QAAhC,oBAEF,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOe,KAAK,SACV,0CAGF,kBAAC,IAAD,CAAOA,KAAK,WACV,4CACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUA,KAAK,IAAID,GAAG,QAAQE,OAAK,IAEnC,iDCtBNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c280dc73.chunk.js","sourcesContent":["export const getPeople = async () => {\n  const result = await fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json())\n    .then(response => response.map((people) => {\n      return {\n        ...people,\n        mother: response.find(obj => obj.name === people.motherName),\n        father: response.find(obj => obj.name === people.fatherName),\n      };\n    }));\n\n  return result;\n};\n","import React from 'react';\nimport './PersonRow.scss';\n\ninterface PersonType {\n  person: {[key: string]: any},\n}\n\nexport const PersonRow = ({ person }: PersonType) => {\n  return (\n    <tr className=\"Person\">\n      {Object.keys(person).filter(elem => elem !== 'slug'\n      && elem !== 'fatherName' && elem !== 'motherName')\n        .map((key, index) => {\n          if ((key === 'mother' || key === 'father') && person[key]) {\n            return <td key={`$${index}${person.name}`}>{person[key].name}</td>;\n          }\n\n          return <td key={`$${index}${person.name}`}>{person[key]}</td>;\n        })}\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PersonRow } from '../PersonRow/PersonRow';\nimport './PeopleTable.scss';\n\nexport interface PeopleType {\n  people: {[key: string]: any}[],\n}\n\nexport const PeopleTable = ({ people }: PeopleType) => {\n  return (\n    <table className=\"PeopleTable\">\n      <thead>\n        <tr>\n          {Object.keys(people[0]).filter(elem => elem !== 'slug' && elem !== 'fatherName' && elem !== 'motherName').map((key, index) => (\n            <td key={index}>\n              {key}\n            </td>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {people && people.map((person, index) => (\n          <React.Fragment key={index}>\n            <PersonRow person={person} />\n          </React.Fragment>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getPeople } from '../../api/getPeople';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState([{}]);\n\n  useEffect(() => {\n    getPeople()\n      .then((response) => {\n        setPeople(response);\n      });\n  }, []);\n\n  return (\n    <>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Switch, Route,\n  Redirect, NavLink,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"header\">\n      <h1>header</h1>\n      <NavLink to=\"/\" className=\"link\">To home page</NavLink>\n      <NavLink to=\"/people\" className=\"link\">To people table</NavLink>\n    </header>\n    <Switch>\n\n      <Route path=\"/home\">\n        <h1>Home page</h1>\n      </Route>\n\n      <Route path=\"/people\">\n        <h1>People table</h1>\n        <PeoplePage />\n      </Route>\n      <Redirect path=\"/\" to=\"/home\" exact />\n\n      <h1>Page not found</h1>\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}